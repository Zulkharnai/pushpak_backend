import { NaniError } from "./nani-error";
/**
 * Error class for representing a group of errors.
 *
 * @remarks
 * This class should not be inherited. Instead, the errors inside it should be
 * instances of Error or NaniError subclasses.
 *
 * The shortMessage of a MultiError will be based on how many errors are
 * provided to it. Only the first error will be treated as the primary cause and
 * actually included in the full message, but all errors (including that one)
 * will be stored on an `errors` property for future use.
 */
export declare class MultiError extends NaniError {
    /**
     * Array of errors contained in the MultiError.
     */
    errors: Error[];
    /**
     * Constructs a MultiError.
     * @param errors - Array of errors.
     */
    constructor(errors: Error[]);
    /**
     * Constructs a MultiError.
     * @param errors - Error instances provided directly as arguments.
     */
    constructor(...errors: Error[]);
}
