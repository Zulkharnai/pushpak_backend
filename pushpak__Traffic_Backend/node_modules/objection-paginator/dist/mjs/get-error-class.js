import { ConfigurationError } from "./configuration-error.js";
import { InvalidCursorError } from "./invalid-cursor-error.js";
export var ValidationCase;
(function (ValidationCase) {
    ValidationCase[ValidationCase["Configuration"] = 0] = "Configuration";
    ValidationCase[ValidationCase["Cursor"] = 1] = "Cursor";
})(ValidationCase = ValidationCase || (ValidationCase = {}));
export function getErrorClass(validationCase) {
    switch (validationCase) {
        case ValidationCase.Configuration:
            return ConfigurationError;
        case ValidationCase.Cursor:
            return InvalidCursorError;
        default:
            throw new TypeError(`Unknown validation case ${validationCase}`);
    }
}
//# sourceMappingURL=get-error-class.js.map